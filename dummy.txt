<!--
                            <td>
                            
                                <a class="navbar-brand text-primary fs-6 fw-bold pe-2" href="/api/product/update-product/<%=products[i]._id%>">EDIT</a>
                                <a class="navbar-brand text-danger fs-6 fw-bold" href="/api/product/delete-product/<%=products[i]._id%>">DELETE</a>

                            
                            </td>
                         -->


                         "title":"gaming laptop",
                         "category":"laptop",
                         "brand":"HP",
                         "description":"befuwefuwbfwrgbjgwjrg hbfbefb efhebr",
                         "price":"60000",
                         "quantity":"100",
                         "color":"black"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                         
const generateOTP = require('generate-otp');
const sendEmail = require('../utils/sendEmail');



const loadRegister = async (req, res) => {
  try {
    res.render('signup');
  } catch (error) {
    console.log(error.message);
  }
};

const signupUser = asyncHandler(async (req, res) => {
  const { email } = req.body;
  const otp = generateOTP(6, { digits: true, alphabets: false, specialChars: false });

  try {
    const findUser = await User.findOne({ email });

    if (!findUser) {
      await User.create({ ...req.body, otp });

      // Send OTP to the user's email
      await sendEmail(email, 'Verify Your Email', `Your OTP: ${otp}`);

      res.render('otpverify', { email });
    } else {
      throw new Error('User already exists');
    }
  } catch (error) {
    console.error('Error during registration:', error);
    res.render('signup', { message: 'Registration failed. Please try again.' });
  }
});

const verifyOtp = asyncHandler(async (req, res) => {
  const { email, otp } = req.body;

  try {
    const user = await User.findOne({ email, otp });

    if (user) {
      // Update user as verified
      await User.updateOne({ email }, { $set: { isVerified: true } });

      res.render('signup', { message: 'Profile registered successfully!' });
    } else {
      throw new Error('Invalid OTP');
    }
  } catch (error) {
    console.error('Error during OTP verification:', error);
    res.render('verifyOtp', { email, message: 'Invalid OTP. Please try again.' });
  }
});

// ... (other functions)

//module.exports = {
  loadRegister,
  signupUser,
  verifyOtp,
  // ... (other exports)
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const loadCreateProduct = async(req,res)=>{
  try {
      res.render("adminCreateProduct")
  } catch (error) {
      console.log(error.message);
  }
}
const createProduct = asyncHandler(async(req,res)=>{//create product
try {
  if(req.body.title){
      req.body.slug = slugify(req.body.title)
  }
  const newProduct =  await Product.create(req.body)
  res.redirect("/api/product/getallproducts")
} catch (error) {
  throw new Error(error)
}
})
const updateProductLoad = async(req,res)=>{
  try {
      res.render("adminUpdateProduct")
  } catch (error) {
      console.log(error.message)
  }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////


const user = new User({
    name: req.body.name,
    email: req.body.email,
    image: req.file.filename,
    password: sPassword,
    is_admin: 0
})
app.post("/register",upload.single("image"),userController.insertUser)

///////////////////////////////////////////////////////////////////////////////////////////////////////////


<a class="btn btn-secondary btn-sm" type="button" href="/api/admin/create-user">ADD USER</a>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-light bg-body-tertiary">
  <!-- Container wrapper -->
  <div class="container-fluid">
    <!-- Toggle button -->
    <button
      data-mdb-collapse-init
      class="navbar-toggler"
      type="button"
      data-mdb-target="#navbarSupportedContent"
      aria-controls="navbarSupportedContent"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <i class="fas fa-bars"></i>
    </button>

    <!-- Collapsible wrapper -->
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <!-- Navbar brand -->
      <a class="navbar-brand mt-2 mt-lg-0" href="#">
        <img
          src="https://mdbcdn.b-cdn.net/img/logo/mdb-transaprent-noshadows.webp"
          height="15"
          alt="MDB Logo"
          loading="lazy"
        />
      </a>
      <!-- Left links -->
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link" href="#">Dashboard</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Team</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Projects</a>
        </li>
      </ul>
      <!-- Left links -->
    </div>
    <!-- Collapsible wrapper -->

    <!-- Right elements -->
    <div class="d-flex align-items-center">
      <!-- Icon -->
      <a class="text-reset me-3" href="#">
        <i class="fas fa-shopping-cart"></i>
      </a>

      <!-- Notifications -->
      <div class="dropdown">
        <a
          data-mdb-dropdown-init
          class="text-reset me-3 dropdown-toggle hidden-arrow"
          href="#"
          id="navbarDropdownMenuLink"
          role="button"
          aria-expanded="false"
        >
          <i class="fas fa-bell"></i>
          <span class="badge rounded-pill badge-notification bg-danger">1</span>
        </a>
        <ul
          class="dropdown-menu dropdown-menu-end"
          aria-labelledby="navbarDropdownMenuLink"
        >
          <li>
            <a class="dropdown-item" href="#">Some news</a>
          </li>
          <li>
            <a class="dropdown-item" href="#">Another news</a>
          </li>
          <li>
            <a class="dropdown-item" href="#">Something else here</a>
          </li>
        </ul>
      </div>
      <!-- Avatar -->
      <div class="dropdown">
        <a
          data-mdb-dropdown-init
          class="dropdown-toggle d-flex align-items-center hidden-arrow"
          href="#"
          id="navbarDropdownMenuAvatar"
          role="button"
          aria-expanded="false"
        >
          <img
            src="https://mdbcdn.b-cdn.net/img/new/avatars/2.webp"
            class="rounded-circle"
            height="25"
            alt="Black and White Portrait of a Man"
            loading="lazy"
          />
        </a>
        <ul
          class="dropdown-menu dropdown-menu-end"
          aria-labelledby="navbarDropdownMenuAvatar"
        >
          <li>
            <a class="dropdown-item" href="#">My profile</a>
          </li>
          <li>
            <a class="dropdown-item" href="#">Settings</a>
          </li>
          <li>
            <a class="dropdown-item" href="#">Logout</a>
          </li>
        </ul>
      </div>
    </div>
    <!-- Right elements -->
  </div>
  <!-- Container wrapper -->
</nav>
<!-- Navbar -->

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const updateCartItemQuantity = asyncHandler(async (req, res) => {
  const { productId } = req.params;
  const { quantity } = req.body;

  try {
    const user = await User.findById(req.user._id);

    const existingCartItem = user.cart.find((item) => item.product.equals(productId));

    if (!existingCartItem) {
      return res.status(404).json({ message: 'Cart item not found' });
    }

    existingCartItem.quantity = quantity;

    await user.save();

    res.status(200).json({ message: 'Cart item quantity updated', cart: user.cart });
  } catch (error) {
    res.status(500).json({ message: 'Internal Server Error' });
  }
});

module.exports = { updateCartItemQuantity };

////////////////////////////////////////////////////////////////////////


<div class="center"> 
<div class="buttons d-flex flex-row">
 <div class="cart"><i class="fa fa-shopping-cart"></i></div>
  <button class="btn btn-success cart-button px-5">
  <span class="dot">1</span>Add to cart </button> 
  </div> 
  </div>